name: Deploy ðŸš€

on:
  workflow_call:
    secrets:
      ECR_REPOSITORY:
        required: true
      AWS_REGION:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      PROD_GITHUB_TOKEN:
        required: true
      DEV_AWS_REGION:
        required: true
      DEV_AWS_ACCESS_KEY_ID:
        required: true
      DEV_AWS_SECRET_ACCESS_KEY:
        required: true
      DEV_GITHUB_TOKEN:
        required: true
      QA_AWS_REGION:
        required: true
      QA_AWS_ACCESS_KEY_ID:
        required: true
      QA_AWS_SECRET_ACCESS_KEY:
        required: true
      QA_GITHUB_TOKEN:
        required: true
      STAGE_AWS_REGION:
        required: true
      STAGE_AWS_ACCESS_KEY_ID:
        required: true
      STAGE_AWS_SECRET_ACCESS_KEY:
        required: true
      STAGE_GITHUB_TOKEN:
        required: true
      SLACK_WEBHOOK:
        required: true

jobs:
  build-image-prod:
    if: ${{ (github.event.ref == 'refs/heads/master') || (github.event.ref == 'refs/heads/main') }}
    uses: .github/workflows/build-image.yml@main
    with:
      dev_env: prod
    secrets:
      ecr_repository: ${{ secrets.ECR_REPOSITORY }}
      region: ${{ secrets.AWS_REGION }}
      aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy-argocd-prod:
    if: ${{ (github.event.ref == 'refs/heads/master') || (github.event.ref == 'refs/heads/main') }}
    needs: [build-image-prod]
    uses: .github/workflows/git-ops.yml@main
    with:
      dev_env: prod
      branch-name: main
    secrets:
      github-token: ${{ secrets.PROD_GITHUB_TOKEN }}
      ecr_repository: ${{ secrets.ECR_REPOSITORY }}

  build-image-dev:
    if: ${{ (github.event.ref == 'refs/heads/develop') || (github.event.ref == 'refs/heads/dev') }}
    uses: .github/workflows/build-image.yml@main
    with:
      dev_env: dev
    secrets:
      ecr_repository: ${{ secrets.ECR_REPOSITORY }}
      region: ${{ secrets.DEV_AWS_REGION }}
      aws_access_key_id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
      aws_secret_access_key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}

  deploy-argocd-dev:
    if: ${{ (github.event.ref == 'refs/heads/develop') || (github.event.ref == 'refs/heads/dev') }}
    needs: [build-image-dev]
    uses: .github/workflows/git-ops.yml@main
    with:
      dev_env: dev
      branch-name: main
    secrets:
      github-token: ${{ secrets.DEV_GITHUB_TOKEN }}
      ecr_repository: ${{ secrets.ECR_REPOSITORY }}

  build-image-qa:
    if: github.event.ref == 'refs/heads/qa'
    uses: .github/workflows/build-image.yml@main
    with:
      dev_env: qa
    secrets:
      ecr_repository: ${{ secrets.ECR_REPOSITORY }}
      region: ${{ secrets.QA_AWS_REGION }}
      aws_access_key_id: ${{ secrets.QA_AWS_ACCESS_KEY_ID }}
      aws_secret_access_key: ${{ secrets.QA_AWS_SECRET_ACCESS_KEY }}

  deploy-argocd-qa:
    if: github.event.ref == 'refs/heads/qa'
    needs: [build-image-qa]
    uses: .github/workflows/git-ops.yml@main
    with:
      dev_env: qa
      branch-name: main
    secrets:
      github-token: ${{ secrets.QA_GITHUB_TOKEN }}
      ecr_repository: ${{ secrets.ECR_REPOSITORY }}

  build-image-stage:
    if: github.event.ref == 'refs/heads/stage'
    uses: .github/workflows/build-image.yml@main
    with:
      dev_env: stage
    secrets:
      ecr_repository: ${{ secrets.ECR_REPOSITORY }}
      region: ${{ secrets.STAGE_AWS_REGION }}
      aws_access_key_id: ${{ secrets.STAGE_AWS_ACCESS_KEY_ID }}
      aws_secret_access_key: ${{ secrets.STAGE_AWS_SECRET_ACCESS_KEY }}

  deploy-argocd-stage:
    if: github.event.ref == 'refs/heads/stage'
    needs: [build-image-stage]
    uses: .github/workflows/git-ops.yml@main
    with:
      dev_env: stage
      branch-name: main
    secrets:
      github-token: ${{ secrets.STAGE_GITHUB_TOKEN }}
      ecr_repository: ${{ secrets.ECR_REPOSITORY }}

  slack-message:
    needs: [deploy-argocd-prod]
    uses: .github/workflows/slack.yml@main
    secrets:
      slack_webhook: ${{ secrets.SLACK_WEBHOOK }}
